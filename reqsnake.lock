{
  "version": "1.0.0",
  "requirements": [
    {
      "req_id": "REQ-CORE-1",
      "description": "ReqSnake shall parse requirements from Markdown files using blockquote syntax.",
      "critical": true,
      "children": [],
      "completed": false
    },
    {
      "req_id": "REQ-CORE-2",
      "description": "A valid requirement is a blockquote with unique requirement ID as the first line, requirement description as a second line and additional fields as lines below.",
      "critical": true,
      "children": [],
      "completed": false
    },
    {
      "req_id": "REQ-CORE-3",
      "description": "Each requirement ID shall be in a form of \"<STRING>-<NUMBER>\". Where NUMBER is an integer.",
      "critical": true,
      "children": [
        "REQ-CORE-2"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-1",
      "description": "The Markdown parser shall extract requirements from Markdown blockquotes compliant with the specified format.",
      "critical": false,
      "children": [
        "REQ-CORE-1",
        "REQ-CORE-2",
        "REQ-CORE-3"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-OUTPUT-1",
      "description": "The CLI shall provide a command to generate a Markdown file containing the status of all currently defined requirements, relying solely on the reqsnake.lock file. The output shall be suitable for inclusion in documentation or reports.",
      "critical": false,
      "children": [
        "REQ-CORE-9"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-OUTPUT-2",
      "description": "The generated Markdown status file shall contain paths to files containing the requirements. They shall be displayed as relative to the current working directory.",
      "critical": false,
      "children": [
        "REQ-OUTPUT-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-OUTPUT-3",
      "description": "The tool shall provide a command to generate a Graphviz diagram (in dot format) representing the requirements hierarchy, using the reqsnake.lock file as input. The output shall be suitable for visualization tools and similar in spirit to the status-md command.",
      "critical": false,
      "children": [
        "REQ-CORE-9"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-OUTPUT-4",
      "description": "The reqsnake.lock file shall contain the version of application which generated it.",
      "critical": false,
      "children": [
        "REQ-CORE-9"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-CORE-4",
      "description": "The tool shall provide a command-line interface (CLI) for managing requirements.",
      "critical": true,
      "children": [],
      "completed": false
    },
    {
      "req_id": "REQ-CORE-5",
      "description": "Child relationships shall be described with a \"child-of\" key. Example: \"child-of REQ-123\"",
      "critical": true,
      "children": [],
      "completed": false
    },
    {
      "req_id": "REQ-CORE-7",
      "description": "A requirement can only be marked as completed once all of its child requirements have been marked as completed",
      "critical": true,
      "children": [],
      "completed": false
    },
    {
      "req_id": "REQ-CORE-8",
      "description": "The tool shall provide a CLI Python API for core operations.",
      "critical": true,
      "children": [],
      "completed": false
    },
    {
      "req_id": "REQ-CORE-9",
      "description": "The tool shall store requirements in a reqsnake.lock file in JSON format. The file shall be used to compare differences when making changes to requirements.",
      "critical": true,
      "children": [],
      "completed": false
    },
    {
      "req_id": "REQ-TEST-1",
      "description": "The parser shall provide unit tests for the Markdown parser.",
      "critical": true,
      "children": [
        "REQ-CORE-1",
        "REQ-PARSER-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-TEST-2",
      "description": "The application code provide integration tests that use the Python API to simulate CLI operations in temporary directories.",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-TEST-3",
      "description": "Integration tests shall verify that reqsnake.lock is updated when Markdown files are changed.",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-TEST-4",
      "description": "Integration tests shall verify that duplicate requirement IDs raise an error.",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-CLI-1",
      "description": "The CLI shall support the commands: init, check, lock, and status.",
      "critical": false,
      "children": [
        "REQ-CORE-4"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-CLI-2",
      "description": "The CLI shall print the Markdown files being scanned during operations.",
      "critical": false,
      "children": [
        "REQ-CLI-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-CLI-3",
      "description": "When the user runs `reqsnake.py lock` and the requirements have not changed since the last lock, the CLI shall print a message indicating that the lockfile is already up-to-date (e.g., \"reqsnake.lock is already up-to-date.\"). Only print the \"reqsnake.lock updated\" message if the lockfile was actually changed.",
      "critical": false,
      "children": [
        "REQ-CLI-1"
      ],
      "completed": true
    },
    {
      "req_id": "REQ-CLI-4",
      "description": "When displaying changed requirements with `reqsnake.py check`, the application shall display the path to the file containing each requiremement which has undergone any kind of change",
      "critical": false,
      "children": [
        "REQ-CLI-1"
      ],
      "completed": true
    },
    {
      "req_id": "REQ-CLI-5",
      "description": "The application shall allow for specification of filesystem paths to be ignored during requirements scanning. A file `.requirementsignore` shall be used to specify the list of filesystem paths to ignore, similar to how .gitignore works",
      "critical": false,
      "children": [],
      "completed": false
    },
    {
      "req_id": "REQ-CLI-6",
      "description": "The CLI shall provide a `status` command that displays completion status of requirements.",
      "critical": false,
      "children": [
        "REQ-CLI-2",
        "REQ-CORE-9"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-CLI-7",
      "description": "The `status` command shall display total requirements count, completed requirements count and percentage, and critical requirements status.",
      "critical": false,
      "children": [
        "REQ-CLI-6"
      ],
      "completed": true
    },
    {
      "req_id": "REQ-CLI-8",
      "description": "The `status` command shall group requirements by source file and show completion status for each file.",
      "critical": false,
      "children": [
        "REQ-CLI-6"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-CLI-9",
      "description": "The `status` command shall display hierarchical completion status showing parent-child relationships with visual indicators.",
      "critical": false,
      "children": [
        "REQ-CLI-6"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-2",
      "description": "The parser shall raise an error if a requirement ID is duplicated in the scanned files.",
      "critical": false,
      "children": [
        "REQ-CORE-2"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-3",
      "description": "The parser shall support the 'critical', 'child', and 'completed' attributes in the blockquote format.",
      "critical": false,
      "children": [
        "REQ-CORE-2"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-4",
      "description": "The parser shall ignore non-blockquote content in Markdown files.",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-5",
      "description": "The parser shall be dependency-free and use only the Python standard library.",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-6",
      "description": "The parser shall handle blockquotes with only an ID or only a description by ignoring them.",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-7",
      "description": "The parser shall ignore extra blank lines or whitespace within blockquotes.",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-8",
      "description": "The parser shall treat attribute keywords (e.g., 'critical', 'child-of', 'completed') case-insensitively and ignore leading/trailing spaces.",
      "critical": false,
      "children": [
        "REQ-CORE-2"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-9",
      "description": "The parser shall allow multiple 'child-of:' lines per requirement, allowing linking a requirement to multiple parents.",
      "critical": false,
      "children": [
        "REQ-CORE-2"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-10",
      "description": "The parser shall raise errors on unknown attributes in requirement definitions.",
      "critical": false,
      "children": [
        "REQ-CORE-2"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-11",
      "description": "The parser shall treat requirement IDs as case-sensitive and not allow IDs with only case differences.",
      "critical": false,
      "children": [
        "REQ-CORE-2"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-12",
      "description": "The parser shall handle blockquotes with inconsistent use of '>' by only considering lines that start with '>'.",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-13",
      "description": "The parser shall ignore Markdown formatting inside blockquotes.",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-14",
      "description": "The parser shall ignore blockquotes that span multiple paragraphs (i.e., with blank lines in between).",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-15",
      "description": "The parser shall raise an error if a circular child relationship is detected.",
      "critical": false,
      "children": [
        "REQ-CORE-2"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-16",
      "description": "The parser shall support requirements and attributes containing Unicode characters.",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-17",
      "description": "The parser shall ignore blockquotes that are commented out in Markdown (e.g., inside ).",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-18",
      "description": "The parser shall handle files with mixed line endings and leading/trailing whitespace.",
      "critical": false,
      "children": [
        "REQ-CORE-1"
      ],
      "completed": false
    },
    {
      "req_id": "REQ-PARSER-19",
      "description": "The parser shall raise errors on duplicated 'child-of:' lines per requirement.",
      "critical": false,
      "children": [
        "REQ-CORE-2"
      ],
      "completed": false
    }
  ]
}