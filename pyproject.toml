# Guide (user-friendly):
# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/

# Specification (technical, formal):
# https://packaging.python.org/en/latest/specifications/pyproject-toml/


# Choosing a build backend:
# https://packaging.python.org/en/latest/tutorials/packaging-projects/#choosing-a-build-backend
[build-system]
# A list of packages that are needed to build your package:
requires = ["setuptools"] # REQUIRED if [build-system] table is used
# The name of the Python object that frontends will use to perform the build:
build-backend = "setuptools.build_meta" # If not defined, then legacy behavior can happen.


[project]
name = "mkdocs-reqsnake"

version = "0.0.1"                                                                  # REQUIRED, although can be dynamic
description = "Plugin providing requirements tracking within MkDocs documentation"
readme = "README.md"
requires-python = ">=3.10"
# license = { file = "LICENSE.txt" }

keywords = ["mkdocs", "plugin", "requirements", "documentation"]


# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",

    # Indicate who your project is intended for
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11",
]

dependencies = ["mkdocs>=1.6", "mkdocs-material>=9.6"]

[project.optional-dependencies]
dev = ["ruff", "mypy", "pytest", "pytest-cov"]

[project.urls]
"Homepage" = "https://github.com/Wint3rmute/ReqSnake/"

[tool.setuptools]
package-dir = { mkdocs_reqsnake = "mkdocs_reqsnake" }

[project.entry-points."mkdocs.plugins"]
reqsnake = "mkdocs_reqsnake.plugin:ReqSnake"

[tool.ruff.lint]
# 1. Enable flake8-bugbear (`B`) rules, in addition to the defaults.
select = [
    # pycodestyle
    "E",
    # pycodestyle warnings
    "W",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",

    # pydocstyle
    "D",

    # pydoclint
    # "DOC"
]

ignore = ["D203", "D212"]

[tool.pytest.ini_options]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["mkdocs_reqsnake"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError", 
    "if __name__ == .__main__.:",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.mypy]
strict = true
